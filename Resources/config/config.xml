<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="foq_elastica.client.class">FOQ\ElasticaBundle\Client</parameter>
        <parameter key="foq_elastica.index.class">Elastica_Index</parameter>
        <parameter key="foq_elastica.type.class">Elastica_Type</parameter>
        <parameter key="foq_elastica.logger.class">FOQ\ElasticaBundle\Logger\ElasticaLogger</parameter>
        <parameter key="foq_elastica.data_collector.class">FOQ\ElasticaBundle\DataCollector\ElasticaDataCollector</parameter>
        <parameter key="foq_elastica.manager.class">FOQ\ElasticaBundle\Manager</parameter>
    </parameters>


    <services>

        <service id="elastica.logger" class="%foq_elastica.logger.class%">
            <argument type="service" id="logger" on-invalid="null" />
            <tag name="monolog.logger" channel="elastica" />
        </service>
        <service id="elastica.data_collector" class="%foq_elastica.data_collector.class%" public="true">
            <tag name="data_collector" template="FOQElasticaBundle:Collector:elastica" id="elastica" />
            <argument type="service" id="elastica.logger" />
        </service>

        <service id="foq_elastica.client" class="%foq_elastica.client.class%">
            <argument /> <!-- config -->
            <call method="setLogger">
                <argument type="service" id="elastica.logger" />
            </call>
        </service>

        <service id="foq_elastica.index_manager" class="FOQ\ElasticaBundle\IndexManager">
            <argument /> <!-- indexes -->
            <argument /> <!-- default index -->
        </service>

        <service id="foq_elastica.populator" class="FOQ\ElasticaBundle\Populator">
            <argument /> <!-- providers -->
        </service>

        <service id="foq_elastica.reseter" class="FOQ\ElasticaBundle\Reseter">
            <argument /> <!-- index configs -->
        </service>

        <service id="foq_elastica.object_persister.prototype" class="FOQ\ElasticaBundle\Persister\ObjectPersister" public="false" abstract="true">
            <argument /> <!-- type -->
            <argument /> <!-- model to elastica transformer -->
            <argument /> <!-- model -->
            <argument /> <!-- properties mapping -->
            <argument type="service" id="logger" on-invalid="null" />
            <argument>%kernel.debug%</argument>
        </service>

        <service id="foq_elastica.finder.prototype" class="FOQ\ElasticaBundle\Finder\TransformedFinder" public="true" abstract="true">
            <argument /> <!-- searchable -->
            <argument /> <!-- transformer -->
        </service>

        <service id="foq_elastica.model_to_elastica_transformer.prototype.auto" class="FOQ\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer" public="false" abstract="true">
            <argument /> <!-- options -->
        </service>

        <service id="foq_elastica.manager" class="%foq_elastica.manager.class%" />

    </services>

</container>
